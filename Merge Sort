#include <iostream>
using namespace std;


void Merge(int *v, int inicio, int meio, int fim){
    int *temp, p1, p2, tamanho, i,j,k;

    int fim1 = 0, fim2 = 0;
    tamanho = fim - inicio +1;
    p1 = inicio;
    p2 = meio +1;
    temp = (int*) malloc (tamanho* sizeof(int));
    if(temp != NULL)
    {
        for(i = 0; i < tamanho; i++)
        {
            if(!fim1 && !fim2)
            {
                if(v[p1] < v[p2])
                {
                    temp[i] = v[p1++];
                }
                else
                    temp[i] = v[p2++];
                if(p1 > meio)
                {
                    fim1 = 1;
                }
                if(p2 > fim)
                {
                    fim2 = 1;
                }
            }
            else{
                if(!fim1)
                    temp[i] = v[p1++];
                else
                    temp[i] = v[p2++];
            }
        }
        for(j=0,k=inicio;j<tamanho; j++,k++)
        {
            v[k] = temp[j];
        }
    }
    free(temp);
}

void Mergesort(int *v, int inicio, int fim){
    int meio;
    if(inicio < fim)
    {
        meio = (inicio+fim)/2;
        Mergesort(v, inicio, meio);
        Mergesort(v,meio+1, fim);
        Merge(v, inicio, meio, fim);

    }
}

int main()
{
    int inicio, fim;
    int n;

    cout << "tamanho do vetor: ";
    cin >> n;

    int vetor[n];

    cout << "Inserir Valores do Vetor: \n";

    for(int i = 0; i <n; i++)
    {
        cin >> vetor[i];
    }

    int x = n-1;
    Mergesort(vetor,0,x);

     for(int i = 0; i < n; i++)
    {
        cout << vetor[i] << "\t";
    }



    return -1;
}


